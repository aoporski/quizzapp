services:
  postgres:
    image: postgres:15
    container_name: quizzapp-postgres
    restart: always
    environment:
      POSTGRES_DB: quizzapp
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
    ports:
      - "15432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin", "-d", "quizzapp"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:6
    container_name: quizzapp-mongo
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "27018:27017"
    volumes:
      - mongo-data:/data/db

  redis:
    image: redis:7
    container_name: quizzapp-redis
    ports:
      - "6379:6379"

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    command: start-dev
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=secret
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://quizzapp-postgres:5432/keycloak_db
      - KC_DB_USERNAME=admin
      - KC_DB_PASSWORD=secret
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  frontend:
    build: ./frontend
    container_name: quizzapp-frontend
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env
    depends_on:
      - user
      - gateway

  gateway:
    build: ./gateway_service
    container_name: quizzapp-gateway
    ports:
      - "3001:3001"
    env_file:
      - ./gateway_service/.env
    depends_on:
      - keycloak

  user:
    build: ./user_service
    container_name: quizzapp-user
    ports:
      - "3002:3002"
    env_file:
      - ./user_service/.env
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_started
      redis:
        condition: service_started

  quiz:
    build: ./quiz_service
    container_name: quizzapp-quiz
    ports:
      - "3003:3003"
    env_file:
      - ./quiz_service/.env
    depends_on:
      - mongo
    restart: always

volumes:
  postgres-data:
  mongo-data:
