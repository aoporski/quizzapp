services:
  postgres:
    image: postgres:15
    container_name: quizzapp-postgres
    restart: always
    environment:
      POSTGRES_DB: quizzapp
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
    ports:
      - "15432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    networks:
      - quizzapp
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin", "-d", "quizzapp"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:6
    container_name: quizzapp-mongo
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "27018:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - quizzapp
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: quizzapp-redis
    ports:
      - "6379:6379"
    networks:
      - quizzapp
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: keycloak
    command:
      - start-dev
      - --hostname-strict=false
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=secret
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak_db
      - KC_DB_USERNAME=admin
      - KC_DB_PASSWORD=secret
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - quizzapp

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env
      - ./frontend/.env.local
    depends_on:
      - user
      - gateway
    networks:
      - quizzapp

  gateway:
    build: ./gateway_service
    container_name: gateway
    ports:
      - "3001:3001"
    env_file:
      - ./gateway_service/.env
    depends_on:
      - keycloak
    networks:
      - quizzapp

  user:
    build: ./user_service
    container_name: user
    ports:
      - "3002:3002"
    env_file:
      - ./user_service/.env
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - quizzapp

  quiz:
    build: ./quiz_service
    container_name: quiz
    ports:
      - "3003:3003"
    env_file:
      - ./quiz_service/.env
    depends_on:
      - mongo
    networks:
      - quizzapp
    restart: always

  session:
    build: ./session_service
    container_name: session
    ports:
      - "3004:3004"
    env_file:
      - ./session_service/.env
    depends_on:
      - redis
    networks:
      - quizzapp

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - gateway
      - keycloak
    restart: unless-stopped
    networks:
      - quizzapp

networks:
  quizzapp:
    driver: bridge

volumes:
  postgres-data:
  mongo-data:
